// Code generated by capnpc-go. DO NOT EDIT.

package main

import (
	context "context"
	grain "zenhack.net/go/sandstorm/capnp/grain"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
	server "zombiezen.com/go/capnproto2/server"
)

type AppPersistentCallback struct{ Client *capnp.Client }

// AppPersistentCallback_TypeID is the unique identifier for the type AppPersistentCallback.
const AppPersistentCallback_TypeID = 0xf141e2685e28bcb3

func (c AppPersistentCallback) Run(ctx context.Context, params func(grain.ScheduledJob_Callback_run_Params) error) (grain.ScheduledJob_Callback_run_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xab619ad5a8fb7e11,
			MethodID:      0,
			InterfaceName: "grain.capnp:ScheduledJob.Callback",
			MethodName:    "run",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.ScheduledJob_Callback_run_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return grain.ScheduledJob_Callback_run_Results_Future{Future: ans.Future()}, release
}
func (c AppPersistentCallback) Save(ctx context.Context, params func(grain.AppPersistent_save_Params) error) (grain.AppPersistent_save_Results_Future, capnp.ReleaseFunc) {
	s := capnp.Send{
		Method: capnp.Method{
			InterfaceID:   0xaffa789add8747b8,
			MethodID:      0,
			InterfaceName: "grain.capnp:AppPersistent",
			MethodName:    "save",
		},
	}
	if params != nil {
		s.ArgsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		s.PlaceArgs = func(s capnp.Struct) error { return params(grain.AppPersistent_save_Params{Struct: s}) }
	}
	ans, release := c.Client.SendCall(ctx, s)
	return grain.AppPersistent_save_Results_Future{Future: ans.Future()}, release
}

// A AppPersistentCallback_Server is a AppPersistentCallback with a local implementation.
type AppPersistentCallback_Server interface {
	Run(context.Context, grain.ScheduledJob_Callback_run) error

	Save(context.Context, grain.AppPersistent_save) error
}

// AppPersistentCallback_NewServer creates a new Server from an implementation of AppPersistentCallback_Server.
func AppPersistentCallback_NewServer(s AppPersistentCallback_Server, policy *server.Policy) *server.Server {
	c, _ := s.(server.Shutdowner)
	return server.New(AppPersistentCallback_Methods(nil, s), s, c, policy)
}

// AppPersistentCallback_ServerToClient creates a new Client from an implementation of AppPersistentCallback_Server.
// The caller is responsible for calling Release on the returned Client.
func AppPersistentCallback_ServerToClient(s AppPersistentCallback_Server, policy *server.Policy) AppPersistentCallback {
	return AppPersistentCallback{Client: capnp.NewClient(AppPersistentCallback_NewServer(s, policy))}
}

// AppPersistentCallback_Methods appends Methods to a slice that invoke the methods on s.
// This can be used to create a more complicated Server.
func AppPersistentCallback_Methods(methods []server.Method, s AppPersistentCallback_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 2)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xab619ad5a8fb7e11,
			MethodID:      0,
			InterfaceName: "grain.capnp:ScheduledJob.Callback",
			MethodName:    "run",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Run(ctx, grain.ScheduledJob_Callback_run{call})
		},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaffa789add8747b8,
			MethodID:      0,
			InterfaceName: "grain.capnp:AppPersistent",
			MethodName:    "save",
		},
		Impl: func(ctx context.Context, call *server.Call) error {
			return s.Save(ctx, grain.AppPersistent_save{call})
		},
	})

	return methods
}

type AppObjectId struct{ capnp.Struct }

// AppObjectId_TypeID is the unique identifier for the type AppObjectId.
const AppObjectId_TypeID = 0xd28c4a85995985b2

func NewAppObjectId(s *capnp.Segment) (AppObjectId, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return AppObjectId{st}, err
}

func NewRootAppObjectId(s *capnp.Segment) (AppObjectId, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return AppObjectId{st}, err
}

func ReadRootAppObjectId(msg *capnp.Message) (AppObjectId, error) {
	root, err := msg.Root()
	return AppObjectId{root.Struct()}, err
}

func (s AppObjectId) String() string {
	str, _ := text.Marshal(0xd28c4a85995985b2, s.Struct)
	return str
}

func (s AppObjectId) CallbackName() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s AppObjectId) HasCallbackName() bool {
	return s.Struct.HasPtr(0)
}

func (s AppObjectId) CallbackNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s AppObjectId) SetCallbackName(v string) error {
	return s.Struct.SetText(0, v)
}

// AppObjectId_List is a list of AppObjectId.
type AppObjectId_List struct{ capnp.List }

// NewAppObjectId creates a new list of AppObjectId.
func NewAppObjectId_List(s *capnp.Segment, sz int32) (AppObjectId_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return AppObjectId_List{l}, err
}

func (s AppObjectId_List) At(i int) AppObjectId { return AppObjectId{s.List.Struct(i)} }

func (s AppObjectId_List) Set(i int, v AppObjectId) error { return s.List.SetStruct(i, v.Struct) }

func (s AppObjectId_List) String() string {
	str, _ := text.MarshalList(0xd28c4a85995985b2, s.List)
	return str
}

// AppObjectId_Future is a wrapper for a AppObjectId promised by a client call.
type AppObjectId_Future struct{ *capnp.Future }

func (p AppObjectId_Future) Struct() (AppObjectId, error) {
	s, err := p.Future.Struct()
	return AppObjectId{s}, err
}

const schema_883486ed73c1aade = "x\xda2\x90`t`2d\x9d\xce\xce\xc0\x10\x18\xc1" +
	"\xca\xf6\x7fSk\xe4\xccV\xaf\x9eK\x0c\x82\xbc\x8c\xff" +
	"\xef\xad:X\xfc\xb6\xcd\xa4\x83\x81\x95\x91\x9d\x81Ax" +
	"#\xf3)\xe1\xbd\xcc \xd6Nf{\x06\xc6\xff\x9b\xf7" +
	"h\xc4e<r\xfc\xc8 \xc8\xcb\x8cP\xcb\xc0h|" +
	"\x97Y\x8aQ\xf8-X\xe5Kfv\xe1\x97\xcc\xea\x0c" +
	"w\xfe\xe7fVd\xe6\x15\xeb%3%\x16\xe4\x15X" +
	"9\x16\x14\xf8'e\xa5&\x97x\xa600\x0402" +
	"\x06\xb20\xb300\xb0020\x08\xf2f10\x04" +
	"\xf203\x06J01\xfeON\xcc\xc9IJL\xce" +
	"f\xe0\xf7K\xccMe\xe4a`b\xe4a`\x84\x1b" +
	"\xc6\x0c3, \xb5\xa88\xb3\xb8$5\xaf\xc4\x19\xac" +
	"\x8399;\x80\x911\x80\x995\x90\x83\x91\xf1\xbf`" +
	"\xdd\xef\x15Wg%\xaef``\xf8\xbf\xc3\xbd\xfd\xee" +
	"\xac\x8a_\xeb\x19\x18\x18\x00\x01\x00\x00\xff\xff\x86AO" +
	"\x12"

func init() {
	schemas.Register(schema_883486ed73c1aade,
		0xd28c4a85995985b2,
		0xf141e2685e28bcb3)
}
